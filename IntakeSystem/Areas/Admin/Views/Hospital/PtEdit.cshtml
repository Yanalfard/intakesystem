@model DataLayer.ViewModels.HospitalVm
@{
    ViewBag.Title = "  ویرایش مرکز درمانی";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/datePersion/persianDatepicker-default.css" rel="stylesheet" />

@using (Html.BeginForm("PtEdit", "Hospital", FormMethod.Post, new { enctype = "multipart/form-data", style = "overflow:auto" }))
{
    <div class="modal-body">
        @Html.HiddenFor(model => model.HospitalId)
        @Html.HiddenFor(model => model.ImageUrl)
        <div class="form-row">
            <div class="form-group col-md-4">
                <label for="">دسته بندی را انتخاب کنید</label>
                <select class="form-control categoryselect">
                    @foreach (var item in Model.TblCatagory)
                    {
                        <option value="@item.CatagoryId" @(item.CatagoryId == Model.CatagoryId ? "selected" : "")>@item.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.CatagoryId, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-row mt-2 bg-light">
            <div class="form-group col-md-4">
                <label class="mt-2">نام مرکز درمانی</label>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "مثال: امام رضا" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                <label class="mt-2">شماره تماس اول</label>
                @Html.EditorFor(model => model.TellNo, new { htmlAttributes = new { @class = "form-control", placeholder = "...041" } })
                @Html.ValidationMessageFor(model => model.TellNo, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                <label class="mt-2">شماره تماس دوم</label>
                @Html.EditorFor(model => model.TellNo2, new { htmlAttributes = new { @class = "form-control", placeholder = "...041" } })
                @Html.ValidationMessageFor(model => model.TellNo2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row bg-light">
            <div class="form-group col-md-4">
                <label>درصد سود</label>
                @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-4">
                <label>استان </label>
                <select class="form-control ostanId" id="ostanId">
                    <option value="0">استان....</option>
                    @foreach (var item in Model.TblLocations)
                    {
                        <option value="@item.LocationId" @(item.LocationId == Model.ostanIdSelect ? "selected" : "")>@item.LocationName</option>
                    }
                </select>
            </div>
            <div class="form-group col-md-4 listCity">
                @Html.Action("ShowCity")
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.ImageUrl != null)
        {
            <div class="form-row bg-light">
                <img src="~/Resources/Images/Hospital/Thumb/@Model.ImageUrl" style="max-width:20%;display:block;margin:0 auto" alt="@Model.Name" />
            </div>
        }
        <label class="mt-2">افزودن تصویر</label>
        <br />
        <div class="custom-file col-md-7">
            <input type="file" name="imgUrl" id="imgUrl" class="custom-file-input form-control " onchange="inputChanged(this)">
            <label class="custom-file-label" for="Image" data-browse="انتخاب" id="FileName">انتخاب تصویر</label>
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })

        </div>
        <div class="custom-file col-md-4">
            <label>کاربر </label>
            <select class="form-control userselect">
                <option value="0">انتخاب کاربر</option>
                @foreach (var item in Model.TblUsers)
                {
                    <option value="@item.UserId" @(item.UserId == Model.UserId ? "selected" : "")>@item.TellNo</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
        <div class="form-row">
            <div class="form-group col-md-7">
                <label class="mt-2">توضیحات کوتاه</label>
                @Html.EditorFor(model => model.AboutUs, new { htmlAttributes = new { @class = "textarea-fix-height-120", placeholder = " متن توضیحات..." } })
            </div>
            @Html.ValidationMessageFor(model => model.AboutUs, "", new { @class = "text-danger" })
        </div>
        <div class="form-row">
            <div class="form-group col-md-7">
                <label>آدرس</label>
                @*<textarea class="textarea-fix-height-120" name="Address" id="Address" placeholder=" آدرس ... "></textarea>*@
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "textarea-fix-height-120", placeholder = "مثال: تبریز..." } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <label>لوکیشن مرکز درمانی</label>
        <div id="map" style="height:220px;"></div>
        <input type="hidden" name="Lat" id="Lat" value="@Model.Lat" />
        <input type="hidden" name="Lon" id="Lon" value="@Model.Lon" />
        @Html.ValidationMessageFor(model => model.Lat, "", new { @class = "text-danger" })

        <div class="modal-footer justify-content-end">
            <button type="submit" class="btn btn-success btn-sm text-white">ویرایش<span class="icon-holder uk-margin-small-right" uk-icon="add-circle-outline"></span></button>
        </div>
    </div>
    <input type="hidden" name="LocationId" id="LocationId" value="@Model.LocationId" />
    <input type="hidden" name="CatagoryId" id="CatagoryId" value="@Model.CatagoryId" />
    <input type="hidden" name="UserId" id="UserId" value="@Model.UserId" />
}


@section Script{

    <link href="~/Areas/Admin/Resource/css/leaflet.css" rel="stylesheet" />
    <script src="~/Areas/Admin/Resource/js/leaflet.js"></script>

    <script>
        function inputChanged(sender) {
            var fileName = sender.files[0].name;
            sender.parentElement.querySelector('.custom-file-label').innerHTML = fileName;
        }
    </script>
    <script>
        var ids = $(".categoryselect option:selected").val();
        $("#CatagoryId").val(ids);
        $(".categoryselect").change(function () {
            var id = $(".categoryselect option:selected").val();
            $("#CatagoryId").val(id);
        });

        $(".userselect").change(function () {
            var id = $(".userselect option:selected").val();
            $("#UserId").val(id);
        });
    </script>

    <script>

        ostanloadCity();
        $(".ostanId").change(function () {
            ostanloadCity();
        });
        function ostanloadCity() {
            $("#overlay").fadeIn(300);
            var id = $(".ostanId").val();
            $.get('/Admin/Hospital/ShowCity/' + id, function (result) {
                console.log(result);
                $('.listCity').html(result);
                $('.LocationIdCity').val($('#LocationId').val());
                $("#overlay").fadeOut(300);

            });
        }



        var map = L.map('map').setView([38.07674409597339, 46.29700302496191], 11);

        L.tileLayer('https://a.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Mr Tab'
        }).addTo(map);

        var iconSetting = L.Icon.extend({
            options: {
                iconSize: [20, 29],
                iconAnchor: [10, 29]
            }
        });

        var customIcon = new iconSetting({ iconUrl: '/location.png' });
        var Lat = $("#Lat").val();
        var Lon = $("#Lon").val();
        L.marker([Lat, Lon], { icon: customIcon }).addTo(map).bindPopup($("#Name").val()).openPopup(); var theMarker = {};

        map.on('click', function (e) {
            lat = e.latlng.lat;
            lon = e.latlng.lng;

            //Clear existing marker,

            if (theMarker != undefined) {
                map.removeLayer(theMarker);
            };


            //Add a marker to show where you clicked.
            $("#Lat").val(lat.toString());
            $("#Lon").val(lon.toString());
            theMarker = L.marker([lat, lon], { icon: customIcon }).addTo(map).bindPopup('<h6 style="color:green">موقعیت جدید رستوران ویرایش شد</h6>').openPopup();
        });

    </script>
}